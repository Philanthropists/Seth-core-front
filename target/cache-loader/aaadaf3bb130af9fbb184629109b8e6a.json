{"remainingRequest":"/Users/juanmoreno/Documents/solidaridad/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/juanmoreno/Documents/solidaridad/node_modules/ts-loader/index.js??ref--4-3!/Users/juanmoreno/Documents/solidaridad/node_modules/eslint-loader/dist/cjs.js!/Users/juanmoreno/Documents/solidaridad/src/main/webapp/app/entities/post/post.tsx","dependencies":[{"path":"/Users/juanmoreno/Documents/solidaridad/src/main/webapp/app/entities/post/post.tsx","mtime":1605795982508},{"path":"/Users/juanmoreno/Documents/solidaridad/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/juanmoreno/Documents/solidaridad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/juanmoreno/Documents/solidaridad/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/juanmoreno/Documents/solidaridad/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/juanmoreno/Documents/solidaridad/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/juanmoreno/Documents/solidaridad/src/main/webapp/app/entities/post/post.tsx","sourceRoot":"","sources":["/Users/juanmoreno/Documents/solidaridad/node_modules/eslint-loader/dist/cjs.js!/Users/juanmoreno/Documents/solidaridad/src/main/webapp/app/entities/post/post.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AACnD,OAAO,cAAc,MAAM,yBAAyB,CAAC;AACrD,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,IAAI,EAAuB,MAAM,kBAAkB,CAAC;AAC7D,OAAO,EAAE,MAAM,EAAY,KAAK,EAAE,MAAM,YAAY,CAAC;AACrD,OAAO,EAAqB,UAAU,EAAE,YAAY,EAAwB,MAAM,gBAAgB,CAAC;AACnG,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAGjE,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAEpD,OAAO,EAAE,eAAe,EAAE,qBAAqB,EAAE,MAAM,sBAAsB,CAAC;AAC9E,OAAO,EAAE,cAAc,EAAE,MAAM,sCAAsC,CAAC;AACtE,OAAO,EAAE,sCAAsC,EAAE,MAAM,8BAA8B,CAAC;AAItF,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,KAAiB,EAAE,EAAE;IACxC,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,QAAQ,CACpD,sCAAsC,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,cAAc,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAC5G,CAAC;IACF,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAE9C,MAAM,cAAc,GAAG,GAAG,EAAE;QAC1B,KAAK,CAAC,WAAW,CAAC,eAAe,CAAC,UAAU,GAAG,CAAC,EAAE,eAAe,CAAC,YAAY,EAAE,GAAG,eAAe,CAAC,IAAI,IAAI,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC;IACtI,CAAC,CAAC;IAEF,MAAM,QAAQ,GAAG,GAAG,EAAE;QACpB,KAAK,CAAC,KAAK,EAAE,CAAC;QACd,kBAAkB,iCACb,eAAe,KAClB,UAAU,EAAE,CAAC,IACb,CAAC;QACH,KAAK,CAAC,WAAW,EAAE,CAAC;IACtB,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,QAAQ,EAAE,CAAC;IACb,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,KAAK,CAAC,aAAa,EAAE;YACvB,QAAQ,EAAE,CAAC;SACZ;IACH,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;IAE1B,SAAS,CAAC,GAAG,EAAE;QACb,cAAc,EAAE,CAAC;IACnB,CAAC,EAAE,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC;IAEjC,MAAM,cAAc,GAAG,GAAG,EAAE;QAC1B,IAAK,MAAc,CAAC,WAAW,GAAG,CAAC,EAAE;YACnC,kBAAkB,iCACb,eAAe,KAClB,UAAU,EAAE,eAAe,CAAC,UAAU,GAAG,CAAC,IAC1C,CAAC;SACJ;IACH,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,OAAO,EAAE;YACX,cAAc,EAAE,CAAC;YACjB,UAAU,CAAC,KAAK,CAAC,CAAC;SACnB;IACH,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IAEd,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE;QACrB,KAAK,CAAC,KAAK,EAAE,CAAC;QACd,kBAAkB,iCACb,eAAe,KAClB,UAAU,EAAE,CAAC,EACb,KAAK,EAAE,eAAe,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EACvD,IAAI,EAAE,CAAC,IACP,CAAC;QACH,UAAU,CAAC,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC;IAEF,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;IAC3C,OAAO,CACL;QACE,4BAAI,EAAE,EAAC,cAAc;;YAEnB,oBAAC,IAAI,IAAC,EAAE,EAAE,GAAG,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,EAAC,8CAA8C,EAAC,EAAE,EAAC,kBAAkB;gBAC1G,oBAAC,eAAe,IAAC,IAAI,EAAC,MAAM,GAAG;yCAE1B,CACJ;QACL,6BAAK,SAAS,EAAC,kBAAkB;YAC/B,oBAAC,cAAc,IACb,SAAS,EAAE,eAAe,CAAC,UAAU,EACrC,QAAQ,EAAE,cAAc,EACxB,OAAO,EAAE,eAAe,CAAC,UAAU,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,EAC1D,MAAM,EAAE,6BAAK,SAAS,EAAC,QAAQ,kBAAkB,EACjD,SAAS,EAAE,CAAC,EACZ,WAAW,EAAE,KAAK,IAEjB,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CACjC,oBAAC,KAAK,IAAC,UAAU;gBACf;oBACE;wBACE,4BAAI,SAAS,EAAC,MAAM,EAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC;;4BACnC,oBAAC,eAAe,IAAC,IAAI,EAAC,MAAM,GAAG,CAC/B;wBACL,4BAAI,SAAS,EAAC,MAAM,EAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC;;4BACnC,oBAAC,eAAe,IAAC,IAAI,EAAC,MAAM,GAAG,CACjC;wBACL,4BAAI,SAAS,EAAC,MAAM,EAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC;;4BACnC,oBAAC,eAAe,IAAC,IAAI,EAAC,MAAM,GAAG,CACjC;wBACL,4BAAI,SAAS,EAAC,MAAM,EAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC;;4BACnC,oBAAC,eAAe,IAAC,IAAI,EAAC,MAAM,GAAG,CACxC;wBACL,4BAAI,SAAS,EAAC,MAAM,EAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC;;4BAClC,oBAAC,eAAe,IAAC,IAAI,EAAC,MAAM,GAAG,CACzC;wBACL,4BAAI,SAAS,EAAC,MAAM,EAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC;;4BAClC,oBAAC,eAAe,IAAC,IAAI,EAAC,MAAM,GAAG,CAC1C;wBACL,+BAAM,CACH,CACC;gBACR,mCACG,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CACzB,4BAAI,GAAG,EAAE,UAAU,CAAC,EAAE;oBACpB;wBACE,oBAAC,MAAM,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAC,MAAM,EAAC,IAAI,EAAC,IAAI,IACrE,IAAI,CAAC,EAAE,CACD,CACN;oBACL,gCAAK,IAAI,CAAC,IAAI,CAAM;oBACpB,gCAAK,IAAI,CAAC,IAAI,CAAM;oBACpB,gCAAK,IAAI,CAAC,WAAW,CAAM;oBAC3B,gCAAK,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,oBAAC,UAAU,IAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,eAAe,GAAI,CAAC,CAAC,CAAC,IAAI,CAAM;oBACjH,gCACG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,oBAAC,UAAU,IAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,MAAM,EAAE,qBAAqB,GAAI,CAAC,CAAC,CAAC,IAAI,CAC5G;oBACL,4BAAI,SAAS,EAAC,YAAY;wBACxB,6BAAK,SAAS,EAAC,oCAAoC;4BACjD,oBAAC,MAAM,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAC,MAAM,EAAC,IAAI,EAAC,IAAI;gCACtE,oBAAC,eAAe,IAAC,IAAI,EAAC,KAAK,GAAG;;gCAAC,8BAAM,SAAS,EAAC,oBAAoB,WAAY,CACxE;4BACT,oBAAC,MAAM,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAC,SAAS,EAAC,IAAI,EAAC,IAAI;gCAC9E,oBAAC,eAAe,IAAC,IAAI,EAAC,YAAY,GAAG;;gCAAC,8BAAM,SAAS,EAAC,oBAAoB,WAAY,CAC/E;4BACT,oBAAC,MAAM,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,QAAQ,EAAC,IAAI,EAAC,IAAI;gCAC/E,oBAAC,eAAe,IAAC,IAAI,EAAC,OAAO,GAAG;;gCAAC,8BAAM,SAAS,EAAC,oBAAoB,aAAc,CAC5E,CACL,CACH,CACF,CACN,CAAC,CACI,CACF,CACT,CAAC,CAAC,CAAC,CACF,CAAC,OAAO,IAAI,6BAAK,SAAS,EAAC,qBAAqB,qBAAqB,CACtE,CACc,CACb,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,CAAC,EAAE,IAAI,EAAc,EAAE,EAAE,CAAC,CAAC;IACjD,QAAQ,EAAE,IAAI,CAAC,QAAQ;IACvB,OAAO,EAAE,IAAI,CAAC,OAAO;IACrB,UAAU,EAAE,IAAI,CAAC,UAAU;IAC3B,KAAK,EAAE,IAAI,CAAC,KAAK;IACjB,MAAM,EAAE,IAAI,CAAC,MAAM;IACnB,aAAa,EAAE,IAAI,CAAC,aAAa;CAClC,CAAC,CAAC;AAEH,MAAM,kBAAkB,GAAG;IACzB,WAAW;IACX,KAAK;CACN,CAAC;AAKF,eAAe,OAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,IAAI,CAAC,CAAC","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Col, Row, Table } from 'reactstrap';\nimport { ICrudGetAllAction, TextFormat, getSortState, IPaginationBaseState } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntities, reset } from './post.reducer';\nimport { IPost } from 'app/shared/model/post.model';\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\nimport { overridePaginationStateWithQueryParams } from 'app/shared/util/entity-utils';\n\nexport interface IPostProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\n\nexport const Post = (props: IPostProps) => {\n  const [paginationState, setPaginationState] = useState(\n    overridePaginationStateWithQueryParams(getSortState(props.location, ITEMS_PER_PAGE), props.location.search)\n  );\n  const [sorting, setSorting] = useState(false);\n\n  const getAllEntities = () => {\n    props.getEntities(paginationState.activePage - 1, paginationState.itemsPerPage, `${paginationState.sort},${paginationState.order}`);\n  };\n\n  const resetAll = () => {\n    props.reset();\n    setPaginationState({\n      ...paginationState,\n      activePage: 1,\n    });\n    props.getEntities();\n  };\n\n  useEffect(() => {\n    resetAll();\n  }, []);\n\n  useEffect(() => {\n    if (props.updateSuccess) {\n      resetAll();\n    }\n  }, [props.updateSuccess]);\n\n  useEffect(() => {\n    getAllEntities();\n  }, [paginationState.activePage]);\n\n  const handleLoadMore = () => {\n    if ((window as any).pageYOffset > 0) {\n      setPaginationState({\n        ...paginationState,\n        activePage: paginationState.activePage + 1,\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (sorting) {\n      getAllEntities();\n      setSorting(false);\n    }\n  }, [sorting]);\n\n  const sort = p => () => {\n    props.reset();\n    setPaginationState({\n      ...paginationState,\n      activePage: 1,\n      order: paginationState.order === 'asc' ? 'desc' : 'asc',\n      sort: p,\n    });\n    setSorting(true);\n  };\n\n  const { postList, match, loading } = props;\n  return (\n    <div>\n      <h2 id=\"post-heading\">\n        Posts\n        <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\n          <FontAwesomeIcon icon=\"plus\" />\n          &nbsp; Create new Post\n        </Link>\n      </h2>\n      <div className=\"table-responsive\">\n        <InfiniteScroll\n          pageStart={paginationState.activePage}\n          loadMore={handleLoadMore}\n          hasMore={paginationState.activePage - 1 < props.links.next}\n          loader={<div className=\"loader\">Loading ...</div>}\n          threshold={0}\n          initialLoad={false}\n        >\n          {postList && postList.length > 0 ? (\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th className=\"hand\" onClick={sort('id')}>\n                    ID <FontAwesomeIcon icon=\"sort\" />\n                  </th>\n                  <th className=\"hand\" onClick={sort('name')}>\n                    Name <FontAwesomeIcon icon=\"sort\" />\n                  </th>\n                  <th className=\"hand\" onClick={sort('type')}>\n                    Type <FontAwesomeIcon icon=\"sort\" />\n                  </th>\n                  <th className=\"hand\" onClick={sort('description')}>\n                    Description <FontAwesomeIcon icon=\"sort\" />\n                  </th>\n                  <th className=\"hand\" onClick={sort('publishDate')}>\n                    Publish Date <FontAwesomeIcon icon=\"sort\" />\n                  </th>\n                  <th className=\"hand\" onClick={sort('resolvedDate')}>\n                    Resolved Date <FontAwesomeIcon icon=\"sort\" />\n                  </th>\n                  <th />\n                </tr>\n              </thead>\n              <tbody>\n                {postList.map((post, i) => (\n                  <tr key={`entity-${i}`}>\n                    <td>\n                      <Button tag={Link} to={`${match.url}/${post.id}`} color=\"link\" size=\"sm\">\n                        {post.id}\n                      </Button>\n                    </td>\n                    <td>{post.name}</td>\n                    <td>{post.type}</td>\n                    <td>{post.description}</td>\n                    <td>{post.publishDate ? <TextFormat type=\"date\" value={post.publishDate} format={APP_DATE_FORMAT} /> : null}</td>\n                    <td>\n                      {post.resolvedDate ? <TextFormat type=\"date\" value={post.resolvedDate} format={APP_LOCAL_DATE_FORMAT} /> : null}\n                    </td>\n                    <td className=\"text-right\">\n                      <div className=\"btn-group flex-btn-group-container\">\n                        <Button tag={Link} to={`${match.url}/${post.id}`} color=\"info\" size=\"sm\">\n                          <FontAwesomeIcon icon=\"eye\" /> <span className=\"d-none d-md-inline\">View</span>\n                        </Button>\n                        <Button tag={Link} to={`${match.url}/${post.id}/edit`} color=\"primary\" size=\"sm\">\n                          <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\">Edit</span>\n                        </Button>\n                        <Button tag={Link} to={`${match.url}/${post.id}/delete`} color=\"danger\" size=\"sm\">\n                          <FontAwesomeIcon icon=\"trash\" /> <span className=\"d-none d-md-inline\">Delete</span>\n                        </Button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          ) : (\n            !loading && <div className=\"alert alert-warning\">No Posts found</div>\n          )}\n        </InfiniteScroll>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ post }: IRootState) => ({\n  postList: post.entities,\n  loading: post.loading,\n  totalItems: post.totalItems,\n  links: post.links,\n  entity: post.entity,\n  updateSuccess: post.updateSuccess,\n});\n\nconst mapDispatchToProps = {\n  getEntities,\n  reset,\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\n"]}]}